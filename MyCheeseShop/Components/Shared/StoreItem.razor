@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using MyCheeseShop.Model
@inject ProtectedSessionStorage ProtectedSessionStore
@inject ShoppingCart ShoppingCart

<div class="card h-100" style="background:aliceblue">
    <span class="position-absolute top-0 start-50 translate-middle bg-primary w-100" style="font-size:20px; padding:5px; color:aliceblue; text-align: center"><b>@Cheese.Name</b></span>
    <div class="mb-3" />
    <img src="/img/cheeses/@Cheese.ImageUrl" class="card-img-top" alt="@Cheese.Name">
    <div class="d-grid gap-2">
    </div>
    <div class="card-body">
        <p style="text-align:center">
            <div class="d-grid gap-2">
            <span class="badge text-primary-emphasis bg-primary-subtle border border-primary-subtle w-100" style="font-size:20px"><b>£@Cheese.Price</b> per 100g</span>
            </div>
        </p>
        <div class="row">
            <div class="col-md-6">
                <div class="d-grid gap-2">
                    <span class="badge text-primary-emphasis bg-primary-subtle border border-primary-subtle rounded-2" style="text-align:center">Type: @Cheese.Type</span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="d-grid gap-2">
                    <span class="badge text-primary-emphasis bg-primary-subtle border border-primary-subtle rounded-2" style="text-align:center">
                        Strength: @Cheese.Strength
                    </span>
                </div>
            </div>
        </div>
    </div>
    <ul class="list-group list-group-flush h-100">
        <div style="padding:10px">
            <p class="card-text text-primary-emphasis"><i>@Cheese.Description</i></p>
        </div>
    </ul>

    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <h3>
                    <InputSelect class="form-select w-100 text-primary-emphasis bg-primary-subtle" @bind-Value="quantity" required>
                        @for (var i = 1; i <= 5; i++)
                        {
                            <option value="@i">@(i * 100)g</option>
                        }
                    </InputSelect>
                </h3>
            </div>
            <div class="col-md-6">
                <h3><button class="btn btn-primary position-relative w-100" @onclick="AddToCart">Add to Cart
                @if (ShoppingCart.GetQuantity(Cheese) > 0)
                {
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" style="font-size:15px">
                        x @ShoppingCart.GetQuantity(Cheese)
                        <span class="visually-hidden">@Cheese.Name in shopping cart</span>
                    </span>
                }</button></h3>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public Cheese Cheese { get; set; }

    private int quantity = 1;

    public async Task AddToCart()
    {
        ShoppingCart.AddItem(Cheese, quantity);
        await ProtectedSessionStore.SetAsync("cart", ShoppingCart.GetItems());
    }
}

<EditForm Model="quantity" OnSubmit="AddToCart">
    <div class="row"></div>
</EditForm>